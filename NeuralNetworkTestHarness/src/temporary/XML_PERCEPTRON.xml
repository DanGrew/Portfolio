<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xmlPerceptronWrapper>
    <neuronWrapper>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlNeuron">
            <identification>( 0, 0 )</identification>
            <position>
                <layer>0</layer>
                <index>0</index>
            </position>
            <incoming/>
            <outgoing>
                <synapse>( 0, 0 )_( 1, 0 )</synapse>
                <synapse>( 0, 0 )_( 1, 1 )</synapse>
                <synapse>( 0, 0 )_( 1, 2 )</synapse>
                <synapse>( 0, 0 )_( 1, 3 )</synapse>
                <synapse>( 0, 0 )_( 1, 4 )</synapse>
                <synapse>( 0, 0 )_( 1, 5 )</synapse>
                <synapse>( 0, 0 )_( 1, 6 )</synapse>
                <synapse>( 0, 0 )_( 1, 7 )</synapse>
                <synapse>( 0, 0 )_( 1, 8 )</synapse>
                <synapse>( 0, 0 )_( 1, 9 )</synapse>
            </outgoing>
            <thresholdFunction>model.function.threshold.BasicInputFunction</thresholdFunction>
            <currentOutput>0.0</currentOutput>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlNeuron">
            <identification>( 0, 1 )</identification>
            <position>
                <layer>0</layer>
                <index>1</index>
            </position>
            <incoming/>
            <outgoing>
                <synapse>( 0, 1 )_( 1, 0 )</synapse>
                <synapse>( 0, 1 )_( 1, 1 )</synapse>
                <synapse>( 0, 1 )_( 1, 2 )</synapse>
                <synapse>( 0, 1 )_( 1, 3 )</synapse>
                <synapse>( 0, 1 )_( 1, 4 )</synapse>
                <synapse>( 0, 1 )_( 1, 5 )</synapse>
                <synapse>( 0, 1 )_( 1, 6 )</synapse>
                <synapse>( 0, 1 )_( 1, 7 )</synapse>
                <synapse>( 0, 1 )_( 1, 8 )</synapse>
                <synapse>( 0, 1 )_( 1, 9 )</synapse>
            </outgoing>
            <thresholdFunction>model.function.threshold.BasicInputFunction</thresholdFunction>
            <currentOutput>0.0</currentOutput>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlNeuron">
            <identification>( 0, 2 )</identification>
            <position>
                <layer>0</layer>
                <index>2</index>
            </position>
            <incoming/>
            <outgoing>
                <synapse>( 0, 2 )_( 1, 0 )</synapse>
                <synapse>( 0, 2 )_( 1, 1 )</synapse>
                <synapse>( 0, 2 )_( 1, 2 )</synapse>
                <synapse>( 0, 2 )_( 1, 3 )</synapse>
                <synapse>( 0, 2 )_( 1, 4 )</synapse>
                <synapse>( 0, 2 )_( 1, 5 )</synapse>
                <synapse>( 0, 2 )_( 1, 6 )</synapse>
                <synapse>( 0, 2 )_( 1, 7 )</synapse>
                <synapse>( 0, 2 )_( 1, 8 )</synapse>
                <synapse>( 0, 2 )_( 1, 9 )</synapse>
            </outgoing>
            <thresholdFunction>model.function.threshold.BasicInputFunction</thresholdFunction>
            <currentOutput>0.0</currentOutput>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlNeuron">
            <identification>( 0, 3 )</identification>
            <position>
                <layer>0</layer>
                <index>3</index>
            </position>
            <incoming/>
            <outgoing>
                <synapse>( 0, 3 )_( 1, 0 )</synapse>
                <synapse>( 0, 3 )_( 1, 1 )</synapse>
                <synapse>( 0, 3 )_( 1, 2 )</synapse>
                <synapse>( 0, 3 )_( 1, 3 )</synapse>
                <synapse>( 0, 3 )_( 1, 4 )</synapse>
                <synapse>( 0, 3 )_( 1, 5 )</synapse>
                <synapse>( 0, 3 )_( 1, 6 )</synapse>
                <synapse>( 0, 3 )_( 1, 7 )</synapse>
                <synapse>( 0, 3 )_( 1, 8 )</synapse>
                <synapse>( 0, 3 )_( 1, 9 )</synapse>
            </outgoing>
            <thresholdFunction>model.function.threshold.BasicInputFunction</thresholdFunction>
            <currentOutput>0.0</currentOutput>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlNeuron">
            <identification>( 0, 4 )</identification>
            <position>
                <layer>0</layer>
                <index>4</index>
            </position>
            <incoming/>
            <outgoing>
                <synapse>( 0, 4 )_( 1, 0 )</synapse>
                <synapse>( 0, 4 )_( 1, 1 )</synapse>
                <synapse>( 0, 4 )_( 1, 2 )</synapse>
                <synapse>( 0, 4 )_( 1, 3 )</synapse>
                <synapse>( 0, 4 )_( 1, 4 )</synapse>
                <synapse>( 0, 4 )_( 1, 5 )</synapse>
                <synapse>( 0, 4 )_( 1, 6 )</synapse>
                <synapse>( 0, 4 )_( 1, 7 )</synapse>
                <synapse>( 0, 4 )_( 1, 8 )</synapse>
                <synapse>( 0, 4 )_( 1, 9 )</synapse>
            </outgoing>
            <thresholdFunction>model.function.threshold.BasicInputFunction</thresholdFunction>
            <currentOutput>0.0</currentOutput>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlNeuron">
            <identification>( 0, 5 )</identification>
            <position>
                <layer>0</layer>
                <index>5</index>
            </position>
            <incoming/>
            <outgoing>
                <synapse>( 0, 5 )_( 1, 0 )</synapse>
                <synapse>( 0, 5 )_( 1, 1 )</synapse>
                <synapse>( 0, 5 )_( 1, 2 )</synapse>
                <synapse>( 0, 5 )_( 1, 3 )</synapse>
                <synapse>( 0, 5 )_( 1, 4 )</synapse>
                <synapse>( 0, 5 )_( 1, 5 )</synapse>
                <synapse>( 0, 5 )_( 1, 6 )</synapse>
                <synapse>( 0, 5 )_( 1, 7 )</synapse>
                <synapse>( 0, 5 )_( 1, 8 )</synapse>
                <synapse>( 0, 5 )_( 1, 9 )</synapse>
            </outgoing>
            <thresholdFunction>model.function.threshold.BasicInputFunction</thresholdFunction>
            <currentOutput>0.0</currentOutput>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlNeuron">
            <identification>( 0, 6 )</identification>
            <position>
                <layer>0</layer>
                <index>6</index>
            </position>
            <incoming/>
            <outgoing>
                <synapse>( 0, 6 )_( 1, 0 )</synapse>
                <synapse>( 0, 6 )_( 1, 1 )</synapse>
                <synapse>( 0, 6 )_( 1, 2 )</synapse>
                <synapse>( 0, 6 )_( 1, 3 )</synapse>
                <synapse>( 0, 6 )_( 1, 4 )</synapse>
                <synapse>( 0, 6 )_( 1, 5 )</synapse>
                <synapse>( 0, 6 )_( 1, 6 )</synapse>
                <synapse>( 0, 6 )_( 1, 7 )</synapse>
                <synapse>( 0, 6 )_( 1, 8 )</synapse>
                <synapse>( 0, 6 )_( 1, 9 )</synapse>
            </outgoing>
            <thresholdFunction>model.function.threshold.BasicInputFunction</thresholdFunction>
            <currentOutput>0.0</currentOutput>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlNeuron">
            <identification>( 0, 7 )</identification>
            <position>
                <layer>0</layer>
                <index>7</index>
            </position>
            <incoming/>
            <outgoing>
                <synapse>( 0, 7 )_( 1, 0 )</synapse>
                <synapse>( 0, 7 )_( 1, 1 )</synapse>
                <synapse>( 0, 7 )_( 1, 2 )</synapse>
                <synapse>( 0, 7 )_( 1, 3 )</synapse>
                <synapse>( 0, 7 )_( 1, 4 )</synapse>
                <synapse>( 0, 7 )_( 1, 5 )</synapse>
                <synapse>( 0, 7 )_( 1, 6 )</synapse>
                <synapse>( 0, 7 )_( 1, 7 )</synapse>
                <synapse>( 0, 7 )_( 1, 8 )</synapse>
                <synapse>( 0, 7 )_( 1, 9 )</synapse>
            </outgoing>
            <thresholdFunction>model.function.threshold.BasicInputFunction</thresholdFunction>
            <currentOutput>0.0</currentOutput>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlNeuron">
            <identification>( 0, 8 )</identification>
            <position>
                <layer>0</layer>
                <index>8</index>
            </position>
            <incoming/>
            <outgoing>
                <synapse>( 0, 8 )_( 1, 0 )</synapse>
                <synapse>( 0, 8 )_( 1, 1 )</synapse>
                <synapse>( 0, 8 )_( 1, 2 )</synapse>
                <synapse>( 0, 8 )_( 1, 3 )</synapse>
                <synapse>( 0, 8 )_( 1, 4 )</synapse>
                <synapse>( 0, 8 )_( 1, 5 )</synapse>
                <synapse>( 0, 8 )_( 1, 6 )</synapse>
                <synapse>( 0, 8 )_( 1, 7 )</synapse>
                <synapse>( 0, 8 )_( 1, 8 )</synapse>
                <synapse>( 0, 8 )_( 1, 9 )</synapse>
            </outgoing>
            <thresholdFunction>model.function.threshold.BasicInputFunction</thresholdFunction>
            <currentOutput>0.0</currentOutput>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlNeuron">
            <identification>( 0, 9 )</identification>
            <position>
                <layer>0</layer>
                <index>9</index>
            </position>
            <incoming/>
            <outgoing>
                <synapse>( 0, 9 )_( 1, 0 )</synapse>
                <synapse>( 0, 9 )_( 1, 1 )</synapse>
                <synapse>( 0, 9 )_( 1, 2 )</synapse>
                <synapse>( 0, 9 )_( 1, 3 )</synapse>
                <synapse>( 0, 9 )_( 1, 4 )</synapse>
                <synapse>( 0, 9 )_( 1, 5 )</synapse>
                <synapse>( 0, 9 )_( 1, 6 )</synapse>
                <synapse>( 0, 9 )_( 1, 7 )</synapse>
                <synapse>( 0, 9 )_( 1, 8 )</synapse>
                <synapse>( 0, 9 )_( 1, 9 )</synapse>
            </outgoing>
            <thresholdFunction>model.function.threshold.BasicInputFunction</thresholdFunction>
            <currentOutput>0.0</currentOutput>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlNeuron">
            <identification>( 0, 10 )</identification>
            <position>
                <layer>0</layer>
                <index>10</index>
            </position>
            <incoming/>
            <outgoing>
                <synapse>( 0, 10 )_( 1, 0 )</synapse>
                <synapse>( 0, 10 )_( 1, 1 )</synapse>
                <synapse>( 0, 10 )_( 1, 2 )</synapse>
                <synapse>( 0, 10 )_( 1, 3 )</synapse>
                <synapse>( 0, 10 )_( 1, 4 )</synapse>
                <synapse>( 0, 10 )_( 1, 5 )</synapse>
                <synapse>( 0, 10 )_( 1, 6 )</synapse>
                <synapse>( 0, 10 )_( 1, 7 )</synapse>
                <synapse>( 0, 10 )_( 1, 8 )</synapse>
                <synapse>( 0, 10 )_( 1, 9 )</synapse>
            </outgoing>
            <thresholdFunction>model.function.threshold.BasicInputFunction</thresholdFunction>
            <currentOutput>0.0</currentOutput>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlNeuron">
            <identification>( 0, 11 )</identification>
            <position>
                <layer>0</layer>
                <index>11</index>
            </position>
            <incoming/>
            <outgoing>
                <synapse>( 0, 11 )_( 1, 0 )</synapse>
                <synapse>( 0, 11 )_( 1, 1 )</synapse>
                <synapse>( 0, 11 )_( 1, 2 )</synapse>
                <synapse>( 0, 11 )_( 1, 3 )</synapse>
                <synapse>( 0, 11 )_( 1, 4 )</synapse>
                <synapse>( 0, 11 )_( 1, 5 )</synapse>
                <synapse>( 0, 11 )_( 1, 6 )</synapse>
                <synapse>( 0, 11 )_( 1, 7 )</synapse>
                <synapse>( 0, 11 )_( 1, 8 )</synapse>
                <synapse>( 0, 11 )_( 1, 9 )</synapse>
            </outgoing>
            <thresholdFunction>model.function.threshold.BasicInputFunction</thresholdFunction>
            <currentOutput>0.0</currentOutput>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlNeuron">
            <identification>( 0, 12 )</identification>
            <position>
                <layer>0</layer>
                <index>12</index>
            </position>
            <incoming/>
            <outgoing>
                <synapse>( 0, 12 )_( 1, 0 )</synapse>
                <synapse>( 0, 12 )_( 1, 1 )</synapse>
                <synapse>( 0, 12 )_( 1, 2 )</synapse>
                <synapse>( 0, 12 )_( 1, 3 )</synapse>
                <synapse>( 0, 12 )_( 1, 4 )</synapse>
                <synapse>( 0, 12 )_( 1, 5 )</synapse>
                <synapse>( 0, 12 )_( 1, 6 )</synapse>
                <synapse>( 0, 12 )_( 1, 7 )</synapse>
                <synapse>( 0, 12 )_( 1, 8 )</synapse>
                <synapse>( 0, 12 )_( 1, 9 )</synapse>
            </outgoing>
            <thresholdFunction>model.function.threshold.BasicInputFunction</thresholdFunction>
            <currentOutput>0.0</currentOutput>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlNeuron">
            <identification>( 0, 13 )</identification>
            <position>
                <layer>0</layer>
                <index>13</index>
            </position>
            <incoming/>
            <outgoing>
                <synapse>( 0, 13 )_( 1, 0 )</synapse>
                <synapse>( 0, 13 )_( 1, 1 )</synapse>
                <synapse>( 0, 13 )_( 1, 2 )</synapse>
                <synapse>( 0, 13 )_( 1, 3 )</synapse>
                <synapse>( 0, 13 )_( 1, 4 )</synapse>
                <synapse>( 0, 13 )_( 1, 5 )</synapse>
                <synapse>( 0, 13 )_( 1, 6 )</synapse>
                <synapse>( 0, 13 )_( 1, 7 )</synapse>
                <synapse>( 0, 13 )_( 1, 8 )</synapse>
                <synapse>( 0, 13 )_( 1, 9 )</synapse>
            </outgoing>
            <thresholdFunction>model.function.threshold.BasicInputFunction</thresholdFunction>
            <currentOutput>0.0</currentOutput>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlNeuron">
            <identification>( 0, 14 )</identification>
            <position>
                <layer>0</layer>
                <index>14</index>
            </position>
            <incoming/>
            <outgoing>
                <synapse>( 0, 14 )_( 1, 0 )</synapse>
                <synapse>( 0, 14 )_( 1, 1 )</synapse>
                <synapse>( 0, 14 )_( 1, 2 )</synapse>
                <synapse>( 0, 14 )_( 1, 3 )</synapse>
                <synapse>( 0, 14 )_( 1, 4 )</synapse>
                <synapse>( 0, 14 )_( 1, 5 )</synapse>
                <synapse>( 0, 14 )_( 1, 6 )</synapse>
                <synapse>( 0, 14 )_( 1, 7 )</synapse>
                <synapse>( 0, 14 )_( 1, 8 )</synapse>
                <synapse>( 0, 14 )_( 1, 9 )</synapse>
            </outgoing>
            <thresholdFunction>model.function.threshold.BasicInputFunction</thresholdFunction>
            <currentOutput>0.0</currentOutput>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlNeuron">
            <identification>( 0, 15 )</identification>
            <position>
                <layer>0</layer>
                <index>15</index>
            </position>
            <incoming/>
            <outgoing>
                <synapse>( 0, 15 )_( 1, 0 )</synapse>
                <synapse>( 0, 15 )_( 1, 1 )</synapse>
                <synapse>( 0, 15 )_( 1, 2 )</synapse>
                <synapse>( 0, 15 )_( 1, 3 )</synapse>
                <synapse>( 0, 15 )_( 1, 4 )</synapse>
                <synapse>( 0, 15 )_( 1, 5 )</synapse>
                <synapse>( 0, 15 )_( 1, 6 )</synapse>
                <synapse>( 0, 15 )_( 1, 7 )</synapse>
                <synapse>( 0, 15 )_( 1, 8 )</synapse>
                <synapse>( 0, 15 )_( 1, 9 )</synapse>
            </outgoing>
            <thresholdFunction>model.function.threshold.BasicInputFunction</thresholdFunction>
            <currentOutput>0.0</currentOutput>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlNeuron">
            <identification>( 0, 16 )</identification>
            <position>
                <layer>0</layer>
                <index>16</index>
            </position>
            <incoming/>
            <outgoing>
                <synapse>( 0, 16 )_( 1, 0 )</synapse>
                <synapse>( 0, 16 )_( 1, 1 )</synapse>
                <synapse>( 0, 16 )_( 1, 2 )</synapse>
                <synapse>( 0, 16 )_( 1, 3 )</synapse>
                <synapse>( 0, 16 )_( 1, 4 )</synapse>
                <synapse>( 0, 16 )_( 1, 5 )</synapse>
                <synapse>( 0, 16 )_( 1, 6 )</synapse>
                <synapse>( 0, 16 )_( 1, 7 )</synapse>
                <synapse>( 0, 16 )_( 1, 8 )</synapse>
                <synapse>( 0, 16 )_( 1, 9 )</synapse>
            </outgoing>
            <thresholdFunction>model.function.threshold.BasicInputFunction</thresholdFunction>
            <currentOutput>0.0</currentOutput>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlNeuron">
            <identification>( 0, 17 )</identification>
            <position>
                <layer>0</layer>
                <index>17</index>
            </position>
            <incoming/>
            <outgoing>
                <synapse>( 0, 17 )_( 1, 0 )</synapse>
                <synapse>( 0, 17 )_( 1, 1 )</synapse>
                <synapse>( 0, 17 )_( 1, 2 )</synapse>
                <synapse>( 0, 17 )_( 1, 3 )</synapse>
                <synapse>( 0, 17 )_( 1, 4 )</synapse>
                <synapse>( 0, 17 )_( 1, 5 )</synapse>
                <synapse>( 0, 17 )_( 1, 6 )</synapse>
                <synapse>( 0, 17 )_( 1, 7 )</synapse>
                <synapse>( 0, 17 )_( 1, 8 )</synapse>
                <synapse>( 0, 17 )_( 1, 9 )</synapse>
            </outgoing>
            <thresholdFunction>model.function.threshold.BasicInputFunction</thresholdFunction>
            <currentOutput>0.0</currentOutput>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlNeuron">
            <identification>( 0, 18 )</identification>
            <position>
                <layer>0</layer>
                <index>18</index>
            </position>
            <incoming/>
            <outgoing>
                <synapse>( 0, 18 )_( 1, 0 )</synapse>
                <synapse>( 0, 18 )_( 1, 1 )</synapse>
                <synapse>( 0, 18 )_( 1, 2 )</synapse>
                <synapse>( 0, 18 )_( 1, 3 )</synapse>
                <synapse>( 0, 18 )_( 1, 4 )</synapse>
                <synapse>( 0, 18 )_( 1, 5 )</synapse>
                <synapse>( 0, 18 )_( 1, 6 )</synapse>
                <synapse>( 0, 18 )_( 1, 7 )</synapse>
                <synapse>( 0, 18 )_( 1, 8 )</synapse>
                <synapse>( 0, 18 )_( 1, 9 )</synapse>
            </outgoing>
            <thresholdFunction>model.function.threshold.BasicInputFunction</thresholdFunction>
            <currentOutput>0.0</currentOutput>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlNeuron">
            <identification>( 0, 19 )</identification>
            <position>
                <layer>0</layer>
                <index>19</index>
            </position>
            <incoming/>
            <outgoing>
                <synapse>( 0, 19 )_( 1, 0 )</synapse>
                <synapse>( 0, 19 )_( 1, 1 )</synapse>
                <synapse>( 0, 19 )_( 1, 2 )</synapse>
                <synapse>( 0, 19 )_( 1, 3 )</synapse>
                <synapse>( 0, 19 )_( 1, 4 )</synapse>
                <synapse>( 0, 19 )_( 1, 5 )</synapse>
                <synapse>( 0, 19 )_( 1, 6 )</synapse>
                <synapse>( 0, 19 )_( 1, 7 )</synapse>
                <synapse>( 0, 19 )_( 1, 8 )</synapse>
                <synapse>( 0, 19 )_( 1, 9 )</synapse>
            </outgoing>
            <thresholdFunction>model.function.threshold.BasicInputFunction</thresholdFunction>
            <currentOutput>0.0</currentOutput>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlNeuron">
            <identification>( 0, 20 )</identification>
            <position>
                <layer>0</layer>
                <index>20</index>
            </position>
            <incoming/>
            <outgoing>
                <synapse>( 0, 20 )_( 1, 0 )</synapse>
                <synapse>( 0, 20 )_( 1, 1 )</synapse>
                <synapse>( 0, 20 )_( 1, 2 )</synapse>
                <synapse>( 0, 20 )_( 1, 3 )</synapse>
                <synapse>( 0, 20 )_( 1, 4 )</synapse>
                <synapse>( 0, 20 )_( 1, 5 )</synapse>
                <synapse>( 0, 20 )_( 1, 6 )</synapse>
                <synapse>( 0, 20 )_( 1, 7 )</synapse>
                <synapse>( 0, 20 )_( 1, 8 )</synapse>
                <synapse>( 0, 20 )_( 1, 9 )</synapse>
            </outgoing>
            <thresholdFunction>model.function.threshold.BasicInputFunction</thresholdFunction>
            <currentOutput>1.0</currentOutput>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlNeuron">
            <identification>( 1, 0 )</identification>
            <position>
                <layer>1</layer>
                <index>0</index>
            </position>
            <incoming>
                <synapse>( 0, 0 )_( 1, 0 )</synapse>
                <synapse>( 0, 1 )_( 1, 0 )</synapse>
                <synapse>( 0, 10 )_( 1, 0 )</synapse>
                <synapse>( 0, 11 )_( 1, 0 )</synapse>
                <synapse>( 0, 12 )_( 1, 0 )</synapse>
                <synapse>( 0, 13 )_( 1, 0 )</synapse>
                <synapse>( 0, 14 )_( 1, 0 )</synapse>
                <synapse>( 0, 15 )_( 1, 0 )</synapse>
                <synapse>( 0, 16 )_( 1, 0 )</synapse>
                <synapse>( 0, 17 )_( 1, 0 )</synapse>
                <synapse>( 0, 18 )_( 1, 0 )</synapse>
                <synapse>( 0, 19 )_( 1, 0 )</synapse>
                <synapse>( 0, 2 )_( 1, 0 )</synapse>
                <synapse>( 0, 20 )_( 1, 0 )</synapse>
                <synapse>( 0, 3 )_( 1, 0 )</synapse>
                <synapse>( 0, 4 )_( 1, 0 )</synapse>
                <synapse>( 0, 5 )_( 1, 0 )</synapse>
                <synapse>( 0, 6 )_( 1, 0 )</synapse>
                <synapse>( 0, 7 )_( 1, 0 )</synapse>
                <synapse>( 0, 8 )_( 1, 0 )</synapse>
                <synapse>( 0, 9 )_( 1, 0 )</synapse>
            </incoming>
            <outgoing/>
            <thresholdFunction>model.function.threshold.McCullochPittsFunction</thresholdFunction>
            <currentOutput>0.0</currentOutput>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlNeuron">
            <identification>( 1, 1 )</identification>
            <position>
                <layer>1</layer>
                <index>1</index>
            </position>
            <incoming>
                <synapse>( 0, 0 )_( 1, 1 )</synapse>
                <synapse>( 0, 1 )_( 1, 1 )</synapse>
                <synapse>( 0, 10 )_( 1, 1 )</synapse>
                <synapse>( 0, 11 )_( 1, 1 )</synapse>
                <synapse>( 0, 12 )_( 1, 1 )</synapse>
                <synapse>( 0, 13 )_( 1, 1 )</synapse>
                <synapse>( 0, 14 )_( 1, 1 )</synapse>
                <synapse>( 0, 15 )_( 1, 1 )</synapse>
                <synapse>( 0, 16 )_( 1, 1 )</synapse>
                <synapse>( 0, 17 )_( 1, 1 )</synapse>
                <synapse>( 0, 18 )_( 1, 1 )</synapse>
                <synapse>( 0, 19 )_( 1, 1 )</synapse>
                <synapse>( 0, 2 )_( 1, 1 )</synapse>
                <synapse>( 0, 20 )_( 1, 1 )</synapse>
                <synapse>( 0, 3 )_( 1, 1 )</synapse>
                <synapse>( 0, 4 )_( 1, 1 )</synapse>
                <synapse>( 0, 5 )_( 1, 1 )</synapse>
                <synapse>( 0, 6 )_( 1, 1 )</synapse>
                <synapse>( 0, 7 )_( 1, 1 )</synapse>
                <synapse>( 0, 8 )_( 1, 1 )</synapse>
                <synapse>( 0, 9 )_( 1, 1 )</synapse>
            </incoming>
            <outgoing/>
            <thresholdFunction>model.function.threshold.McCullochPittsFunction</thresholdFunction>
            <currentOutput>0.0</currentOutput>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlNeuron">
            <identification>( 1, 2 )</identification>
            <position>
                <layer>1</layer>
                <index>2</index>
            </position>
            <incoming>
                <synapse>( 0, 0 )_( 1, 2 )</synapse>
                <synapse>( 0, 1 )_( 1, 2 )</synapse>
                <synapse>( 0, 10 )_( 1, 2 )</synapse>
                <synapse>( 0, 11 )_( 1, 2 )</synapse>
                <synapse>( 0, 12 )_( 1, 2 )</synapse>
                <synapse>( 0, 13 )_( 1, 2 )</synapse>
                <synapse>( 0, 14 )_( 1, 2 )</synapse>
                <synapse>( 0, 15 )_( 1, 2 )</synapse>
                <synapse>( 0, 16 )_( 1, 2 )</synapse>
                <synapse>( 0, 17 )_( 1, 2 )</synapse>
                <synapse>( 0, 18 )_( 1, 2 )</synapse>
                <synapse>( 0, 19 )_( 1, 2 )</synapse>
                <synapse>( 0, 2 )_( 1, 2 )</synapse>
                <synapse>( 0, 20 )_( 1, 2 )</synapse>
                <synapse>( 0, 3 )_( 1, 2 )</synapse>
                <synapse>( 0, 4 )_( 1, 2 )</synapse>
                <synapse>( 0, 5 )_( 1, 2 )</synapse>
                <synapse>( 0, 6 )_( 1, 2 )</synapse>
                <synapse>( 0, 7 )_( 1, 2 )</synapse>
                <synapse>( 0, 8 )_( 1, 2 )</synapse>
                <synapse>( 0, 9 )_( 1, 2 )</synapse>
            </incoming>
            <outgoing/>
            <thresholdFunction>model.function.threshold.McCullochPittsFunction</thresholdFunction>
            <currentOutput>0.0</currentOutput>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlNeuron">
            <identification>( 1, 3 )</identification>
            <position>
                <layer>1</layer>
                <index>3</index>
            </position>
            <incoming>
                <synapse>( 0, 0 )_( 1, 3 )</synapse>
                <synapse>( 0, 1 )_( 1, 3 )</synapse>
                <synapse>( 0, 10 )_( 1, 3 )</synapse>
                <synapse>( 0, 11 )_( 1, 3 )</synapse>
                <synapse>( 0, 12 )_( 1, 3 )</synapse>
                <synapse>( 0, 13 )_( 1, 3 )</synapse>
                <synapse>( 0, 14 )_( 1, 3 )</synapse>
                <synapse>( 0, 15 )_( 1, 3 )</synapse>
                <synapse>( 0, 16 )_( 1, 3 )</synapse>
                <synapse>( 0, 17 )_( 1, 3 )</synapse>
                <synapse>( 0, 18 )_( 1, 3 )</synapse>
                <synapse>( 0, 19 )_( 1, 3 )</synapse>
                <synapse>( 0, 2 )_( 1, 3 )</synapse>
                <synapse>( 0, 20 )_( 1, 3 )</synapse>
                <synapse>( 0, 3 )_( 1, 3 )</synapse>
                <synapse>( 0, 4 )_( 1, 3 )</synapse>
                <synapse>( 0, 5 )_( 1, 3 )</synapse>
                <synapse>( 0, 6 )_( 1, 3 )</synapse>
                <synapse>( 0, 7 )_( 1, 3 )</synapse>
                <synapse>( 0, 8 )_( 1, 3 )</synapse>
                <synapse>( 0, 9 )_( 1, 3 )</synapse>
            </incoming>
            <outgoing/>
            <thresholdFunction>model.function.threshold.McCullochPittsFunction</thresholdFunction>
            <currentOutput>0.0</currentOutput>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlNeuron">
            <identification>( 1, 4 )</identification>
            <position>
                <layer>1</layer>
                <index>4</index>
            </position>
            <incoming>
                <synapse>( 0, 0 )_( 1, 4 )</synapse>
                <synapse>( 0, 1 )_( 1, 4 )</synapse>
                <synapse>( 0, 10 )_( 1, 4 )</synapse>
                <synapse>( 0, 11 )_( 1, 4 )</synapse>
                <synapse>( 0, 12 )_( 1, 4 )</synapse>
                <synapse>( 0, 13 )_( 1, 4 )</synapse>
                <synapse>( 0, 14 )_( 1, 4 )</synapse>
                <synapse>( 0, 15 )_( 1, 4 )</synapse>
                <synapse>( 0, 16 )_( 1, 4 )</synapse>
                <synapse>( 0, 17 )_( 1, 4 )</synapse>
                <synapse>( 0, 18 )_( 1, 4 )</synapse>
                <synapse>( 0, 19 )_( 1, 4 )</synapse>
                <synapse>( 0, 2 )_( 1, 4 )</synapse>
                <synapse>( 0, 20 )_( 1, 4 )</synapse>
                <synapse>( 0, 3 )_( 1, 4 )</synapse>
                <synapse>( 0, 4 )_( 1, 4 )</synapse>
                <synapse>( 0, 5 )_( 1, 4 )</synapse>
                <synapse>( 0, 6 )_( 1, 4 )</synapse>
                <synapse>( 0, 7 )_( 1, 4 )</synapse>
                <synapse>( 0, 8 )_( 1, 4 )</synapse>
                <synapse>( 0, 9 )_( 1, 4 )</synapse>
            </incoming>
            <outgoing/>
            <thresholdFunction>model.function.threshold.McCullochPittsFunction</thresholdFunction>
            <currentOutput>0.0</currentOutput>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlNeuron">
            <identification>( 1, 5 )</identification>
            <position>
                <layer>1</layer>
                <index>5</index>
            </position>
            <incoming>
                <synapse>( 0, 0 )_( 1, 5 )</synapse>
                <synapse>( 0, 1 )_( 1, 5 )</synapse>
                <synapse>( 0, 10 )_( 1, 5 )</synapse>
                <synapse>( 0, 11 )_( 1, 5 )</synapse>
                <synapse>( 0, 12 )_( 1, 5 )</synapse>
                <synapse>( 0, 13 )_( 1, 5 )</synapse>
                <synapse>( 0, 14 )_( 1, 5 )</synapse>
                <synapse>( 0, 15 )_( 1, 5 )</synapse>
                <synapse>( 0, 16 )_( 1, 5 )</synapse>
                <synapse>( 0, 17 )_( 1, 5 )</synapse>
                <synapse>( 0, 18 )_( 1, 5 )</synapse>
                <synapse>( 0, 19 )_( 1, 5 )</synapse>
                <synapse>( 0, 2 )_( 1, 5 )</synapse>
                <synapse>( 0, 20 )_( 1, 5 )</synapse>
                <synapse>( 0, 3 )_( 1, 5 )</synapse>
                <synapse>( 0, 4 )_( 1, 5 )</synapse>
                <synapse>( 0, 5 )_( 1, 5 )</synapse>
                <synapse>( 0, 6 )_( 1, 5 )</synapse>
                <synapse>( 0, 7 )_( 1, 5 )</synapse>
                <synapse>( 0, 8 )_( 1, 5 )</synapse>
                <synapse>( 0, 9 )_( 1, 5 )</synapse>
            </incoming>
            <outgoing/>
            <thresholdFunction>model.function.threshold.McCullochPittsFunction</thresholdFunction>
            <currentOutput>0.0</currentOutput>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlNeuron">
            <identification>( 1, 6 )</identification>
            <position>
                <layer>1</layer>
                <index>6</index>
            </position>
            <incoming>
                <synapse>( 0, 0 )_( 1, 6 )</synapse>
                <synapse>( 0, 1 )_( 1, 6 )</synapse>
                <synapse>( 0, 10 )_( 1, 6 )</synapse>
                <synapse>( 0, 11 )_( 1, 6 )</synapse>
                <synapse>( 0, 12 )_( 1, 6 )</synapse>
                <synapse>( 0, 13 )_( 1, 6 )</synapse>
                <synapse>( 0, 14 )_( 1, 6 )</synapse>
                <synapse>( 0, 15 )_( 1, 6 )</synapse>
                <synapse>( 0, 16 )_( 1, 6 )</synapse>
                <synapse>( 0, 17 )_( 1, 6 )</synapse>
                <synapse>( 0, 18 )_( 1, 6 )</synapse>
                <synapse>( 0, 19 )_( 1, 6 )</synapse>
                <synapse>( 0, 2 )_( 1, 6 )</synapse>
                <synapse>( 0, 20 )_( 1, 6 )</synapse>
                <synapse>( 0, 3 )_( 1, 6 )</synapse>
                <synapse>( 0, 4 )_( 1, 6 )</synapse>
                <synapse>( 0, 5 )_( 1, 6 )</synapse>
                <synapse>( 0, 6 )_( 1, 6 )</synapse>
                <synapse>( 0, 7 )_( 1, 6 )</synapse>
                <synapse>( 0, 8 )_( 1, 6 )</synapse>
                <synapse>( 0, 9 )_( 1, 6 )</synapse>
            </incoming>
            <outgoing/>
            <thresholdFunction>model.function.threshold.McCullochPittsFunction</thresholdFunction>
            <currentOutput>0.0</currentOutput>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlNeuron">
            <identification>( 1, 7 )</identification>
            <position>
                <layer>1</layer>
                <index>7</index>
            </position>
            <incoming>
                <synapse>( 0, 0 )_( 1, 7 )</synapse>
                <synapse>( 0, 1 )_( 1, 7 )</synapse>
                <synapse>( 0, 10 )_( 1, 7 )</synapse>
                <synapse>( 0, 11 )_( 1, 7 )</synapse>
                <synapse>( 0, 12 )_( 1, 7 )</synapse>
                <synapse>( 0, 13 )_( 1, 7 )</synapse>
                <synapse>( 0, 14 )_( 1, 7 )</synapse>
                <synapse>( 0, 15 )_( 1, 7 )</synapse>
                <synapse>( 0, 16 )_( 1, 7 )</synapse>
                <synapse>( 0, 17 )_( 1, 7 )</synapse>
                <synapse>( 0, 18 )_( 1, 7 )</synapse>
                <synapse>( 0, 19 )_( 1, 7 )</synapse>
                <synapse>( 0, 2 )_( 1, 7 )</synapse>
                <synapse>( 0, 20 )_( 1, 7 )</synapse>
                <synapse>( 0, 3 )_( 1, 7 )</synapse>
                <synapse>( 0, 4 )_( 1, 7 )</synapse>
                <synapse>( 0, 5 )_( 1, 7 )</synapse>
                <synapse>( 0, 6 )_( 1, 7 )</synapse>
                <synapse>( 0, 7 )_( 1, 7 )</synapse>
                <synapse>( 0, 8 )_( 1, 7 )</synapse>
                <synapse>( 0, 9 )_( 1, 7 )</synapse>
            </incoming>
            <outgoing/>
            <thresholdFunction>model.function.threshold.McCullochPittsFunction</thresholdFunction>
            <currentOutput>0.0</currentOutput>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlNeuron">
            <identification>( 1, 8 )</identification>
            <position>
                <layer>1</layer>
                <index>8</index>
            </position>
            <incoming>
                <synapse>( 0, 0 )_( 1, 8 )</synapse>
                <synapse>( 0, 1 )_( 1, 8 )</synapse>
                <synapse>( 0, 10 )_( 1, 8 )</synapse>
                <synapse>( 0, 11 )_( 1, 8 )</synapse>
                <synapse>( 0, 12 )_( 1, 8 )</synapse>
                <synapse>( 0, 13 )_( 1, 8 )</synapse>
                <synapse>( 0, 14 )_( 1, 8 )</synapse>
                <synapse>( 0, 15 )_( 1, 8 )</synapse>
                <synapse>( 0, 16 )_( 1, 8 )</synapse>
                <synapse>( 0, 17 )_( 1, 8 )</synapse>
                <synapse>( 0, 18 )_( 1, 8 )</synapse>
                <synapse>( 0, 19 )_( 1, 8 )</synapse>
                <synapse>( 0, 2 )_( 1, 8 )</synapse>
                <synapse>( 0, 20 )_( 1, 8 )</synapse>
                <synapse>( 0, 3 )_( 1, 8 )</synapse>
                <synapse>( 0, 4 )_( 1, 8 )</synapse>
                <synapse>( 0, 5 )_( 1, 8 )</synapse>
                <synapse>( 0, 6 )_( 1, 8 )</synapse>
                <synapse>( 0, 7 )_( 1, 8 )</synapse>
                <synapse>( 0, 8 )_( 1, 8 )</synapse>
                <synapse>( 0, 9 )_( 1, 8 )</synapse>
            </incoming>
            <outgoing/>
            <thresholdFunction>model.function.threshold.McCullochPittsFunction</thresholdFunction>
            <currentOutput>0.0</currentOutput>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlNeuron">
            <identification>( 1, 9 )</identification>
            <position>
                <layer>1</layer>
                <index>9</index>
            </position>
            <incoming>
                <synapse>( 0, 0 )_( 1, 9 )</synapse>
                <synapse>( 0, 1 )_( 1, 9 )</synapse>
                <synapse>( 0, 10 )_( 1, 9 )</synapse>
                <synapse>( 0, 11 )_( 1, 9 )</synapse>
                <synapse>( 0, 12 )_( 1, 9 )</synapse>
                <synapse>( 0, 13 )_( 1, 9 )</synapse>
                <synapse>( 0, 14 )_( 1, 9 )</synapse>
                <synapse>( 0, 15 )_( 1, 9 )</synapse>
                <synapse>( 0, 16 )_( 1, 9 )</synapse>
                <synapse>( 0, 17 )_( 1, 9 )</synapse>
                <synapse>( 0, 18 )_( 1, 9 )</synapse>
                <synapse>( 0, 19 )_( 1, 9 )</synapse>
                <synapse>( 0, 2 )_( 1, 9 )</synapse>
                <synapse>( 0, 20 )_( 1, 9 )</synapse>
                <synapse>( 0, 3 )_( 1, 9 )</synapse>
                <synapse>( 0, 4 )_( 1, 9 )</synapse>
                <synapse>( 0, 5 )_( 1, 9 )</synapse>
                <synapse>( 0, 6 )_( 1, 9 )</synapse>
                <synapse>( 0, 7 )_( 1, 9 )</synapse>
                <synapse>( 0, 8 )_( 1, 9 )</synapse>
                <synapse>( 0, 9 )_( 1, 9 )</synapse>
            </incoming>
            <outgoing/>
            <thresholdFunction>model.function.threshold.McCullochPittsFunction</thresholdFunction>
            <currentOutput>0.0</currentOutput>
        </objects>
    </neuronWrapper>
    <synapseWrapper>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 0 )_( 1, 0 )</identification>
            <inputNeuron>( 0, 0 )</inputNeuron>
            <outputNeuron>( 1, 0 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.4777098680357692</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 20 )_( 1, 0 )</identification>
            <inputNeuron>( 0, 20 )</inputNeuron>
            <outputNeuron>( 1, 0 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.22078480111106613</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 1 )_( 1, 0 )</identification>
            <inputNeuron>( 0, 1 )</inputNeuron>
            <outputNeuron>( 1, 0 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.1942256924031377</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 2 )_( 1, 0 )</identification>
            <inputNeuron>( 0, 2 )</inputNeuron>
            <outputNeuron>( 1, 0 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.6735194629003489</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 3 )_( 1, 0 )</identification>
            <inputNeuron>( 0, 3 )</inputNeuron>
            <outputNeuron>( 1, 0 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.26283510936526844</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 4 )_( 1, 0 )</identification>
            <inputNeuron>( 0, 4 )</inputNeuron>
            <outputNeuron>( 1, 0 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.15380838237878725</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 5 )_( 1, 0 )</identification>
            <inputNeuron>( 0, 5 )</inputNeuron>
            <outputNeuron>( 1, 0 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.10661444896107586</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 6 )_( 1, 0 )</identification>
            <inputNeuron>( 0, 6 )</inputNeuron>
            <outputNeuron>( 1, 0 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.7040732957636008</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 7 )_( 1, 0 )</identification>
            <inputNeuron>( 0, 7 )</inputNeuron>
            <outputNeuron>( 1, 0 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.4208995714697068</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 8 )_( 1, 0 )</identification>
            <inputNeuron>( 0, 8 )</inputNeuron>
            <outputNeuron>( 1, 0 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.9466041286987215</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 9 )_( 1, 0 )</identification>
            <inputNeuron>( 0, 9 )</inputNeuron>
            <outputNeuron>( 1, 0 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.6351244935173195</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 10 )_( 1, 0 )</identification>
            <inputNeuron>( 0, 10 )</inputNeuron>
            <outputNeuron>( 1, 0 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.6700822282087779</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 11 )_( 1, 0 )</identification>
            <inputNeuron>( 0, 11 )</inputNeuron>
            <outputNeuron>( 1, 0 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.5316348571952495</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 12 )_( 1, 0 )</identification>
            <inputNeuron>( 0, 12 )</inputNeuron>
            <outputNeuron>( 1, 0 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.6292108278163279</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 13 )_( 1, 0 )</identification>
            <inputNeuron>( 0, 13 )</inputNeuron>
            <outputNeuron>( 1, 0 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.5239863720217053</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 14 )_( 1, 0 )</identification>
            <inputNeuron>( 0, 14 )</inputNeuron>
            <outputNeuron>( 1, 0 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.005782913320360961</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 15 )_( 1, 0 )</identification>
            <inputNeuron>( 0, 15 )</inputNeuron>
            <outputNeuron>( 1, 0 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.4111343156595958</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 16 )_( 1, 0 )</identification>
            <inputNeuron>( 0, 16 )</inputNeuron>
            <outputNeuron>( 1, 0 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.9725938287088622</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 17 )_( 1, 0 )</identification>
            <inputNeuron>( 0, 17 )</inputNeuron>
            <outputNeuron>( 1, 0 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.6739203022376762</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 18 )_( 1, 0 )</identification>
            <inputNeuron>( 0, 18 )</inputNeuron>
            <outputNeuron>( 1, 0 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.051604043153719914</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 19 )_( 1, 0 )</identification>
            <inputNeuron>( 0, 19 )</inputNeuron>
            <outputNeuron>( 1, 0 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.6302628139695466</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 0 )_( 1, 1 )</identification>
            <inputNeuron>( 0, 0 )</inputNeuron>
            <outputNeuron>( 1, 1 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.4970229284755783</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 20 )_( 1, 1 )</identification>
            <inputNeuron>( 0, 20 )</inputNeuron>
            <outputNeuron>( 1, 1 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.7242062909301734</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 1 )_( 1, 1 )</identification>
            <inputNeuron>( 0, 1 )</inputNeuron>
            <outputNeuron>( 1, 1 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.029446151052567093</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 2 )_( 1, 1 )</identification>
            <inputNeuron>( 0, 2 )</inputNeuron>
            <outputNeuron>( 1, 1 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.7203947281078531</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 3 )_( 1, 1 )</identification>
            <inputNeuron>( 0, 3 )</inputNeuron>
            <outputNeuron>( 1, 1 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.8815154517235213</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 4 )_( 1, 1 )</identification>
            <inputNeuron>( 0, 4 )</inputNeuron>
            <outputNeuron>( 1, 1 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.7453287261909599</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 5 )_( 1, 1 )</identification>
            <inputNeuron>( 0, 5 )</inputNeuron>
            <outputNeuron>( 1, 1 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.9435156065301237</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 6 )_( 1, 1 )</identification>
            <inputNeuron>( 0, 6 )</inputNeuron>
            <outputNeuron>( 1, 1 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.3174848711977116</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 7 )_( 1, 1 )</identification>
            <inputNeuron>( 0, 7 )</inputNeuron>
            <outputNeuron>( 1, 1 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.6515830189952199</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 8 )_( 1, 1 )</identification>
            <inputNeuron>( 0, 8 )</inputNeuron>
            <outputNeuron>( 1, 1 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.275754667784182</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 9 )_( 1, 1 )</identification>
            <inputNeuron>( 0, 9 )</inputNeuron>
            <outputNeuron>( 1, 1 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.6221567040404126</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 10 )_( 1, 1 )</identification>
            <inputNeuron>( 0, 10 )</inputNeuron>
            <outputNeuron>( 1, 1 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.7391747652819655</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 11 )_( 1, 1 )</identification>
            <inputNeuron>( 0, 11 )</inputNeuron>
            <outputNeuron>( 1, 1 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.46648567902160887</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 12 )_( 1, 1 )</identification>
            <inputNeuron>( 0, 12 )</inputNeuron>
            <outputNeuron>( 1, 1 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.4562550026761861</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 13 )_( 1, 1 )</identification>
            <inputNeuron>( 0, 13 )</inputNeuron>
            <outputNeuron>( 1, 1 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.4882542276669719</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 14 )_( 1, 1 )</identification>
            <inputNeuron>( 0, 14 )</inputNeuron>
            <outputNeuron>( 1, 1 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.5706271999415028</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 15 )_( 1, 1 )</identification>
            <inputNeuron>( 0, 15 )</inputNeuron>
            <outputNeuron>( 1, 1 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.14323092632081513</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 16 )_( 1, 1 )</identification>
            <inputNeuron>( 0, 16 )</inputNeuron>
            <outputNeuron>( 1, 1 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.3069210936417771</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 17 )_( 1, 1 )</identification>
            <inputNeuron>( 0, 17 )</inputNeuron>
            <outputNeuron>( 1, 1 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.38984790676755887</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 18 )_( 1, 1 )</identification>
            <inputNeuron>( 0, 18 )</inputNeuron>
            <outputNeuron>( 1, 1 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.33077346079649295</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 19 )_( 1, 1 )</identification>
            <inputNeuron>( 0, 19 )</inputNeuron>
            <outputNeuron>( 1, 1 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.30961659521657614</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 0 )_( 1, 2 )</identification>
            <inputNeuron>( 0, 0 )</inputNeuron>
            <outputNeuron>( 1, 2 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.925571325328148</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 20 )_( 1, 2 )</identification>
            <inputNeuron>( 0, 20 )</inputNeuron>
            <outputNeuron>( 1, 2 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.16662151525068392</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 1 )_( 1, 2 )</identification>
            <inputNeuron>( 0, 1 )</inputNeuron>
            <outputNeuron>( 1, 2 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.8536419210967723</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 2 )_( 1, 2 )</identification>
            <inputNeuron>( 0, 2 )</inputNeuron>
            <outputNeuron>( 1, 2 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.19668915956473165</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 3 )_( 1, 2 )</identification>
            <inputNeuron>( 0, 3 )</inputNeuron>
            <outputNeuron>( 1, 2 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.3036264394975984</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 4 )_( 1, 2 )</identification>
            <inputNeuron>( 0, 4 )</inputNeuron>
            <outputNeuron>( 1, 2 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.1522792506705113</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 5 )_( 1, 2 )</identification>
            <inputNeuron>( 0, 5 )</inputNeuron>
            <outputNeuron>( 1, 2 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.693818814044895</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 6 )_( 1, 2 )</identification>
            <inputNeuron>( 0, 6 )</inputNeuron>
            <outputNeuron>( 1, 2 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.6494251221621871</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 7 )_( 1, 2 )</identification>
            <inputNeuron>( 0, 7 )</inputNeuron>
            <outputNeuron>( 1, 2 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.4125303664754235</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 8 )_( 1, 2 )</identification>
            <inputNeuron>( 0, 8 )</inputNeuron>
            <outputNeuron>( 1, 2 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.519563808593804</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 9 )_( 1, 2 )</identification>
            <inputNeuron>( 0, 9 )</inputNeuron>
            <outputNeuron>( 1, 2 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.24293956027405528</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 10 )_( 1, 2 )</identification>
            <inputNeuron>( 0, 10 )</inputNeuron>
            <outputNeuron>( 1, 2 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.2320991248276777</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 11 )_( 1, 2 )</identification>
            <inputNeuron>( 0, 11 )</inputNeuron>
            <outputNeuron>( 1, 2 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.7817406671052515</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 12 )_( 1, 2 )</identification>
            <inputNeuron>( 0, 12 )</inputNeuron>
            <outputNeuron>( 1, 2 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.24093744621665836</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 13 )_( 1, 2 )</identification>
            <inputNeuron>( 0, 13 )</inputNeuron>
            <outputNeuron>( 1, 2 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.29266811330639353</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 14 )_( 1, 2 )</identification>
            <inputNeuron>( 0, 14 )</inputNeuron>
            <outputNeuron>( 1, 2 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.33035194404930834</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 15 )_( 1, 2 )</identification>
            <inputNeuron>( 0, 15 )</inputNeuron>
            <outputNeuron>( 1, 2 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.9363022738432467</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 16 )_( 1, 2 )</identification>
            <inputNeuron>( 0, 16 )</inputNeuron>
            <outputNeuron>( 1, 2 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.5265817458754957</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 17 )_( 1, 2 )</identification>
            <inputNeuron>( 0, 17 )</inputNeuron>
            <outputNeuron>( 1, 2 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.5675634683297703</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 18 )_( 1, 2 )</identification>
            <inputNeuron>( 0, 18 )</inputNeuron>
            <outputNeuron>( 1, 2 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.3915721960319748</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 19 )_( 1, 2 )</identification>
            <inputNeuron>( 0, 19 )</inputNeuron>
            <outputNeuron>( 1, 2 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.5423001574805555</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 0 )_( 1, 3 )</identification>
            <inputNeuron>( 0, 0 )</inputNeuron>
            <outputNeuron>( 1, 3 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.3716402878587812</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 20 )_( 1, 3 )</identification>
            <inputNeuron>( 0, 20 )</inputNeuron>
            <outputNeuron>( 1, 3 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.22809825870147493</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 1 )_( 1, 3 )</identification>
            <inputNeuron>( 0, 1 )</inputNeuron>
            <outputNeuron>( 1, 3 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.005245280730563295</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 2 )_( 1, 3 )</identification>
            <inputNeuron>( 0, 2 )</inputNeuron>
            <outputNeuron>( 1, 3 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.5414700055393928</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 3 )_( 1, 3 )</identification>
            <inputNeuron>( 0, 3 )</inputNeuron>
            <outputNeuron>( 1, 3 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.14072848093310963</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 4 )_( 1, 3 )</identification>
            <inputNeuron>( 0, 4 )</inputNeuron>
            <outputNeuron>( 1, 3 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.43449416480920067</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 5 )_( 1, 3 )</identification>
            <inputNeuron>( 0, 5 )</inputNeuron>
            <outputNeuron>( 1, 3 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.653673346505918</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 6 )_( 1, 3 )</identification>
            <inputNeuron>( 0, 6 )</inputNeuron>
            <outputNeuron>( 1, 3 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.4163156182631995</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 7 )_( 1, 3 )</identification>
            <inputNeuron>( 0, 7 )</inputNeuron>
            <outputNeuron>( 1, 3 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.773813057463661</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 8 )_( 1, 3 )</identification>
            <inputNeuron>( 0, 8 )</inputNeuron>
            <outputNeuron>( 1, 3 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.6274348011619282</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 9 )_( 1, 3 )</identification>
            <inputNeuron>( 0, 9 )</inputNeuron>
            <outputNeuron>( 1, 3 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.9209896110042325</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 10 )_( 1, 3 )</identification>
            <inputNeuron>( 0, 10 )</inputNeuron>
            <outputNeuron>( 1, 3 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.09060378327158802</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 11 )_( 1, 3 )</identification>
            <inputNeuron>( 0, 11 )</inputNeuron>
            <outputNeuron>( 1, 3 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.10904715848949142</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 12 )_( 1, 3 )</identification>
            <inputNeuron>( 0, 12 )</inputNeuron>
            <outputNeuron>( 1, 3 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.0997356851082466</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 13 )_( 1, 3 )</identification>
            <inputNeuron>( 0, 13 )</inputNeuron>
            <outputNeuron>( 1, 3 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.914483800077811</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 14 )_( 1, 3 )</identification>
            <inputNeuron>( 0, 14 )</inputNeuron>
            <outputNeuron>( 1, 3 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.2692754448472139</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 15 )_( 1, 3 )</identification>
            <inputNeuron>( 0, 15 )</inputNeuron>
            <outputNeuron>( 1, 3 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.013767989044941253</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 16 )_( 1, 3 )</identification>
            <inputNeuron>( 0, 16 )</inputNeuron>
            <outputNeuron>( 1, 3 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.8729382686106786</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 17 )_( 1, 3 )</identification>
            <inputNeuron>( 0, 17 )</inputNeuron>
            <outputNeuron>( 1, 3 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.5432255972468509</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 18 )_( 1, 3 )</identification>
            <inputNeuron>( 0, 18 )</inputNeuron>
            <outputNeuron>( 1, 3 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.35072189195572234</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 19 )_( 1, 3 )</identification>
            <inputNeuron>( 0, 19 )</inputNeuron>
            <outputNeuron>( 1, 3 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.785404024729057</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 0 )_( 1, 4 )</identification>
            <inputNeuron>( 0, 0 )</inputNeuron>
            <outputNeuron>( 1, 4 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.3874596789205119</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 20 )_( 1, 4 )</identification>
            <inputNeuron>( 0, 20 )</inputNeuron>
            <outputNeuron>( 1, 4 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.5511522002916256</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 1 )_( 1, 4 )</identification>
            <inputNeuron>( 0, 1 )</inputNeuron>
            <outputNeuron>( 1, 4 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.0935469543813583</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 2 )_( 1, 4 )</identification>
            <inputNeuron>( 0, 2 )</inputNeuron>
            <outputNeuron>( 1, 4 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.11664069185582782</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 3 )_( 1, 4 )</identification>
            <inputNeuron>( 0, 3 )</inputNeuron>
            <outputNeuron>( 1, 4 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.7970536535659273</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 4 )_( 1, 4 )</identification>
            <inputNeuron>( 0, 4 )</inputNeuron>
            <outputNeuron>( 1, 4 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.5312283244649194</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 5 )_( 1, 4 )</identification>
            <inputNeuron>( 0, 5 )</inputNeuron>
            <outputNeuron>( 1, 4 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.01895772021121367</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 6 )_( 1, 4 )</identification>
            <inputNeuron>( 0, 6 )</inputNeuron>
            <outputNeuron>( 1, 4 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.5462402920990279</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 7 )_( 1, 4 )</identification>
            <inputNeuron>( 0, 7 )</inputNeuron>
            <outputNeuron>( 1, 4 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.8565335838243202</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 8 )_( 1, 4 )</identification>
            <inputNeuron>( 0, 8 )</inputNeuron>
            <outputNeuron>( 1, 4 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.6289921628965457</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 9 )_( 1, 4 )</identification>
            <inputNeuron>( 0, 9 )</inputNeuron>
            <outputNeuron>( 1, 4 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.3293451990376097</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 10 )_( 1, 4 )</identification>
            <inputNeuron>( 0, 10 )</inputNeuron>
            <outputNeuron>( 1, 4 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.22738948746321686</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 11 )_( 1, 4 )</identification>
            <inputNeuron>( 0, 11 )</inputNeuron>
            <outputNeuron>( 1, 4 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.6846441204722093</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 12 )_( 1, 4 )</identification>
            <inputNeuron>( 0, 12 )</inputNeuron>
            <outputNeuron>( 1, 4 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.4065332174625159</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 13 )_( 1, 4 )</identification>
            <inputNeuron>( 0, 13 )</inputNeuron>
            <outputNeuron>( 1, 4 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.2255335485804949</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 14 )_( 1, 4 )</identification>
            <inputNeuron>( 0, 14 )</inputNeuron>
            <outputNeuron>( 1, 4 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.13504406875777586</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 15 )_( 1, 4 )</identification>
            <inputNeuron>( 0, 15 )</inputNeuron>
            <outputNeuron>( 1, 4 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.728304793733319</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 16 )_( 1, 4 )</identification>
            <inputNeuron>( 0, 16 )</inputNeuron>
            <outputNeuron>( 1, 4 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.9125126209611825</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 17 )_( 1, 4 )</identification>
            <inputNeuron>( 0, 17 )</inputNeuron>
            <outputNeuron>( 1, 4 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.765352356223295</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 18 )_( 1, 4 )</identification>
            <inputNeuron>( 0, 18 )</inputNeuron>
            <outputNeuron>( 1, 4 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.6794809505922407</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 19 )_( 1, 4 )</identification>
            <inputNeuron>( 0, 19 )</inputNeuron>
            <outputNeuron>( 1, 4 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.5000738682842238</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 0 )_( 1, 5 )</identification>
            <inputNeuron>( 0, 0 )</inputNeuron>
            <outputNeuron>( 1, 5 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.002278696470608188</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 20 )_( 1, 5 )</identification>
            <inputNeuron>( 0, 20 )</inputNeuron>
            <outputNeuron>( 1, 5 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.2759589927777324</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 1 )_( 1, 5 )</identification>
            <inputNeuron>( 0, 1 )</inputNeuron>
            <outputNeuron>( 1, 5 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.15099796455835057</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 2 )_( 1, 5 )</identification>
            <inputNeuron>( 0, 2 )</inputNeuron>
            <outputNeuron>( 1, 5 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.0954333790420161</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 3 )_( 1, 5 )</identification>
            <inputNeuron>( 0, 3 )</inputNeuron>
            <outputNeuron>( 1, 5 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.7375498791333944</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 4 )_( 1, 5 )</identification>
            <inputNeuron>( 0, 4 )</inputNeuron>
            <outputNeuron>( 1, 5 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.07558220623480694</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 5 )_( 1, 5 )</identification>
            <inputNeuron>( 0, 5 )</inputNeuron>
            <outputNeuron>( 1, 5 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.21470307658418508</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 6 )_( 1, 5 )</identification>
            <inputNeuron>( 0, 6 )</inputNeuron>
            <outputNeuron>( 1, 5 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.35334296782929264</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 7 )_( 1, 5 )</identification>
            <inputNeuron>( 0, 7 )</inputNeuron>
            <outputNeuron>( 1, 5 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.38435230092561246</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 8 )_( 1, 5 )</identification>
            <inputNeuron>( 0, 8 )</inputNeuron>
            <outputNeuron>( 1, 5 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.4191421323381386</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 9 )_( 1, 5 )</identification>
            <inputNeuron>( 0, 9 )</inputNeuron>
            <outputNeuron>( 1, 5 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.993134420011159</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 10 )_( 1, 5 )</identification>
            <inputNeuron>( 0, 10 )</inputNeuron>
            <outputNeuron>( 1, 5 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.9422987118472856</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 11 )_( 1, 5 )</identification>
            <inputNeuron>( 0, 11 )</inputNeuron>
            <outputNeuron>( 1, 5 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.9532469989727994</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 12 )_( 1, 5 )</identification>
            <inputNeuron>( 0, 12 )</inputNeuron>
            <outputNeuron>( 1, 5 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.5833040424827444</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 13 )_( 1, 5 )</identification>
            <inputNeuron>( 0, 13 )</inputNeuron>
            <outputNeuron>( 1, 5 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.12216575308065769</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 14 )_( 1, 5 )</identification>
            <inputNeuron>( 0, 14 )</inputNeuron>
            <outputNeuron>( 1, 5 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.023203416472935334</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 15 )_( 1, 5 )</identification>
            <inputNeuron>( 0, 15 )</inputNeuron>
            <outputNeuron>( 1, 5 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.7701670562733155</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 16 )_( 1, 5 )</identification>
            <inputNeuron>( 0, 16 )</inputNeuron>
            <outputNeuron>( 1, 5 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.9639862207572685</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 17 )_( 1, 5 )</identification>
            <inputNeuron>( 0, 17 )</inputNeuron>
            <outputNeuron>( 1, 5 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.11456217707327476</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 18 )_( 1, 5 )</identification>
            <inputNeuron>( 0, 18 )</inputNeuron>
            <outputNeuron>( 1, 5 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.10389055536353631</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 19 )_( 1, 5 )</identification>
            <inputNeuron>( 0, 19 )</inputNeuron>
            <outputNeuron>( 1, 5 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.549548844443763</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 0 )_( 1, 6 )</identification>
            <inputNeuron>( 0, 0 )</inputNeuron>
            <outputNeuron>( 1, 6 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.5638993854971246</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 20 )_( 1, 6 )</identification>
            <inputNeuron>( 0, 20 )</inputNeuron>
            <outputNeuron>( 1, 6 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.4745179493564341</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 1 )_( 1, 6 )</identification>
            <inputNeuron>( 0, 1 )</inputNeuron>
            <outputNeuron>( 1, 6 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.7555652392243584</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 2 )_( 1, 6 )</identification>
            <inputNeuron>( 0, 2 )</inputNeuron>
            <outputNeuron>( 1, 6 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.15352466290012035</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 3 )_( 1, 6 )</identification>
            <inputNeuron>( 0, 3 )</inputNeuron>
            <outputNeuron>( 1, 6 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.9766434191338755</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 4 )_( 1, 6 )</identification>
            <inputNeuron>( 0, 4 )</inputNeuron>
            <outputNeuron>( 1, 6 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.5509416156469115</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 5 )_( 1, 6 )</identification>
            <inputNeuron>( 0, 5 )</inputNeuron>
            <outputNeuron>( 1, 6 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.7118294443490565</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 6 )_( 1, 6 )</identification>
            <inputNeuron>( 0, 6 )</inputNeuron>
            <outputNeuron>( 1, 6 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.3927644274406269</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 7 )_( 1, 6 )</identification>
            <inputNeuron>( 0, 7 )</inputNeuron>
            <outputNeuron>( 1, 6 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.3837588945101239</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 8 )_( 1, 6 )</identification>
            <inputNeuron>( 0, 8 )</inputNeuron>
            <outputNeuron>( 1, 6 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.36523714143488095</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 9 )_( 1, 6 )</identification>
            <inputNeuron>( 0, 9 )</inputNeuron>
            <outputNeuron>( 1, 6 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.7260617581528555</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 10 )_( 1, 6 )</identification>
            <inputNeuron>( 0, 10 )</inputNeuron>
            <outputNeuron>( 1, 6 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.3591190160415093</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 11 )_( 1, 6 )</identification>
            <inputNeuron>( 0, 11 )</inputNeuron>
            <outputNeuron>( 1, 6 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.59367364888868</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 12 )_( 1, 6 )</identification>
            <inputNeuron>( 0, 12 )</inputNeuron>
            <outputNeuron>( 1, 6 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.6707733376310303</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 13 )_( 1, 6 )</identification>
            <inputNeuron>( 0, 13 )</inputNeuron>
            <outputNeuron>( 1, 6 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.696303910260978</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 14 )_( 1, 6 )</identification>
            <inputNeuron>( 0, 14 )</inputNeuron>
            <outputNeuron>( 1, 6 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.8158662640514671</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 15 )_( 1, 6 )</identification>
            <inputNeuron>( 0, 15 )</inputNeuron>
            <outputNeuron>( 1, 6 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.4464666337228985</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 16 )_( 1, 6 )</identification>
            <inputNeuron>( 0, 16 )</inputNeuron>
            <outputNeuron>( 1, 6 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.7720816954711648</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 17 )_( 1, 6 )</identification>
            <inputNeuron>( 0, 17 )</inputNeuron>
            <outputNeuron>( 1, 6 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.36348096063400515</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 18 )_( 1, 6 )</identification>
            <inputNeuron>( 0, 18 )</inputNeuron>
            <outputNeuron>( 1, 6 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.7172584857009168</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 19 )_( 1, 6 )</identification>
            <inputNeuron>( 0, 19 )</inputNeuron>
            <outputNeuron>( 1, 6 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.7248468640844195</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 0 )_( 1, 7 )</identification>
            <inputNeuron>( 0, 0 )</inputNeuron>
            <outputNeuron>( 1, 7 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.037155216959738446</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 20 )_( 1, 7 )</identification>
            <inputNeuron>( 0, 20 )</inputNeuron>
            <outputNeuron>( 1, 7 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.5848693821167897</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 1 )_( 1, 7 )</identification>
            <inputNeuron>( 0, 1 )</inputNeuron>
            <outputNeuron>( 1, 7 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.21932762605650002</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 2 )_( 1, 7 )</identification>
            <inputNeuron>( 0, 2 )</inputNeuron>
            <outputNeuron>( 1, 7 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.8477263729972764</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 3 )_( 1, 7 )</identification>
            <inputNeuron>( 0, 3 )</inputNeuron>
            <outputNeuron>( 1, 7 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.8103135576128611</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 4 )_( 1, 7 )</identification>
            <inputNeuron>( 0, 4 )</inputNeuron>
            <outputNeuron>( 1, 7 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.05635721995382059</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 5 )_( 1, 7 )</identification>
            <inputNeuron>( 0, 5 )</inputNeuron>
            <outputNeuron>( 1, 7 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.9569538677237791</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 6 )_( 1, 7 )</identification>
            <inputNeuron>( 0, 6 )</inputNeuron>
            <outputNeuron>( 1, 7 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.35302524211703756</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 7 )_( 1, 7 )</identification>
            <inputNeuron>( 0, 7 )</inputNeuron>
            <outputNeuron>( 1, 7 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.0012691401836029126</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 8 )_( 1, 7 )</identification>
            <inputNeuron>( 0, 8 )</inputNeuron>
            <outputNeuron>( 1, 7 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.9537392670821575</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 9 )_( 1, 7 )</identification>
            <inputNeuron>( 0, 9 )</inputNeuron>
            <outputNeuron>( 1, 7 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.013174338554220344</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 10 )_( 1, 7 )</identification>
            <inputNeuron>( 0, 10 )</inputNeuron>
            <outputNeuron>( 1, 7 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.7938923949921086</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 11 )_( 1, 7 )</identification>
            <inputNeuron>( 0, 11 )</inputNeuron>
            <outputNeuron>( 1, 7 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.08701119737593321</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 12 )_( 1, 7 )</identification>
            <inputNeuron>( 0, 12 )</inputNeuron>
            <outputNeuron>( 1, 7 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.17895090381831935</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 13 )_( 1, 7 )</identification>
            <inputNeuron>( 0, 13 )</inputNeuron>
            <outputNeuron>( 1, 7 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.5036206307531008</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 14 )_( 1, 7 )</identification>
            <inputNeuron>( 0, 14 )</inputNeuron>
            <outputNeuron>( 1, 7 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.5213861637498505</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 15 )_( 1, 7 )</identification>
            <inputNeuron>( 0, 15 )</inputNeuron>
            <outputNeuron>( 1, 7 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.011860554117129496</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 16 )_( 1, 7 )</identification>
            <inputNeuron>( 0, 16 )</inputNeuron>
            <outputNeuron>( 1, 7 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.042755435193235325</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 17 )_( 1, 7 )</identification>
            <inputNeuron>( 0, 17 )</inputNeuron>
            <outputNeuron>( 1, 7 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.7334759790084704</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 18 )_( 1, 7 )</identification>
            <inputNeuron>( 0, 18 )</inputNeuron>
            <outputNeuron>( 1, 7 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.5698375329188283</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 19 )_( 1, 7 )</identification>
            <inputNeuron>( 0, 19 )</inputNeuron>
            <outputNeuron>( 1, 7 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.44522735037490846</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 0 )_( 1, 8 )</identification>
            <inputNeuron>( 0, 0 )</inputNeuron>
            <outputNeuron>( 1, 8 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.4097628804370509</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 20 )_( 1, 8 )</identification>
            <inputNeuron>( 0, 20 )</inputNeuron>
            <outputNeuron>( 1, 8 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.8050074026316514</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 1 )_( 1, 8 )</identification>
            <inputNeuron>( 0, 1 )</inputNeuron>
            <outputNeuron>( 1, 8 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.6808208984954218</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 2 )_( 1, 8 )</identification>
            <inputNeuron>( 0, 2 )</inputNeuron>
            <outputNeuron>( 1, 8 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.6924359614345054</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 3 )_( 1, 8 )</identification>
            <inputNeuron>( 0, 3 )</inputNeuron>
            <outputNeuron>( 1, 8 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.5927480038047352</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 4 )_( 1, 8 )</identification>
            <inputNeuron>( 0, 4 )</inputNeuron>
            <outputNeuron>( 1, 8 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.7744378298745254</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 5 )_( 1, 8 )</identification>
            <inputNeuron>( 0, 5 )</inputNeuron>
            <outputNeuron>( 1, 8 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.4351821149269175</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 6 )_( 1, 8 )</identification>
            <inputNeuron>( 0, 6 )</inputNeuron>
            <outputNeuron>( 1, 8 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.9489501976317617</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 7 )_( 1, 8 )</identification>
            <inputNeuron>( 0, 7 )</inputNeuron>
            <outputNeuron>( 1, 8 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.9934852316415625</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 8 )_( 1, 8 )</identification>
            <inputNeuron>( 0, 8 )</inputNeuron>
            <outputNeuron>( 1, 8 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.15763343144572728</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 9 )_( 1, 8 )</identification>
            <inputNeuron>( 0, 9 )</inputNeuron>
            <outputNeuron>( 1, 8 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.8117547446603472</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 10 )_( 1, 8 )</identification>
            <inputNeuron>( 0, 10 )</inputNeuron>
            <outputNeuron>( 1, 8 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.3652690223401821</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 11 )_( 1, 8 )</identification>
            <inputNeuron>( 0, 11 )</inputNeuron>
            <outputNeuron>( 1, 8 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.6574621206577527</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 12 )_( 1, 8 )</identification>
            <inputNeuron>( 0, 12 )</inputNeuron>
            <outputNeuron>( 1, 8 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.13099614278511407</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 13 )_( 1, 8 )</identification>
            <inputNeuron>( 0, 13 )</inputNeuron>
            <outputNeuron>( 1, 8 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.6221390369786649</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 14 )_( 1, 8 )</identification>
            <inputNeuron>( 0, 14 )</inputNeuron>
            <outputNeuron>( 1, 8 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.06754869602624125</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 15 )_( 1, 8 )</identification>
            <inputNeuron>( 0, 15 )</inputNeuron>
            <outputNeuron>( 1, 8 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.17451694017675168</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 16 )_( 1, 8 )</identification>
            <inputNeuron>( 0, 16 )</inputNeuron>
            <outputNeuron>( 1, 8 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.12989926573224997</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 17 )_( 1, 8 )</identification>
            <inputNeuron>( 0, 17 )</inputNeuron>
            <outputNeuron>( 1, 8 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.7325267066173745</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 18 )_( 1, 8 )</identification>
            <inputNeuron>( 0, 18 )</inputNeuron>
            <outputNeuron>( 1, 8 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.9247158562946312</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 19 )_( 1, 8 )</identification>
            <inputNeuron>( 0, 19 )</inputNeuron>
            <outputNeuron>( 1, 8 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.5705642675402244</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 0 )_( 1, 9 )</identification>
            <inputNeuron>( 0, 0 )</inputNeuron>
            <outputNeuron>( 1, 9 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.6106636599674036</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 20 )_( 1, 9 )</identification>
            <inputNeuron>( 0, 20 )</inputNeuron>
            <outputNeuron>( 1, 9 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.6839200133636346</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 1 )_( 1, 9 )</identification>
            <inputNeuron>( 0, 1 )</inputNeuron>
            <outputNeuron>( 1, 9 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.48153644395279704</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 2 )_( 1, 9 )</identification>
            <inputNeuron>( 0, 2 )</inputNeuron>
            <outputNeuron>( 1, 9 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.7321665076838589</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 3 )_( 1, 9 )</identification>
            <inputNeuron>( 0, 3 )</inputNeuron>
            <outputNeuron>( 1, 9 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.9742541973656316</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 4 )_( 1, 9 )</identification>
            <inputNeuron>( 0, 4 )</inputNeuron>
            <outputNeuron>( 1, 9 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.38503877797609976</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 5 )_( 1, 9 )</identification>
            <inputNeuron>( 0, 5 )</inputNeuron>
            <outputNeuron>( 1, 9 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.4018368518156563</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 6 )_( 1, 9 )</identification>
            <inputNeuron>( 0, 6 )</inputNeuron>
            <outputNeuron>( 1, 9 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.6176354061173451</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 7 )_( 1, 9 )</identification>
            <inputNeuron>( 0, 7 )</inputNeuron>
            <outputNeuron>( 1, 9 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.6907579780940837</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 8 )_( 1, 9 )</identification>
            <inputNeuron>( 0, 8 )</inputNeuron>
            <outputNeuron>( 1, 9 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.06306865438578457</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 9 )_( 1, 9 )</identification>
            <inputNeuron>( 0, 9 )</inputNeuron>
            <outputNeuron>( 1, 9 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.04387260270898341</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 10 )_( 1, 9 )</identification>
            <inputNeuron>( 0, 10 )</inputNeuron>
            <outputNeuron>( 1, 9 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.3606186180978752</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 11 )_( 1, 9 )</identification>
            <inputNeuron>( 0, 11 )</inputNeuron>
            <outputNeuron>( 1, 9 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.6027030026103477</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 12 )_( 1, 9 )</identification>
            <inputNeuron>( 0, 12 )</inputNeuron>
            <outputNeuron>( 1, 9 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.09112082701086643</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 13 )_( 1, 9 )</identification>
            <inputNeuron>( 0, 13 )</inputNeuron>
            <outputNeuron>( 1, 9 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.5944046726996205</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 14 )_( 1, 9 )</identification>
            <inputNeuron>( 0, 14 )</inputNeuron>
            <outputNeuron>( 1, 9 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.980237224516219</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 15 )_( 1, 9 )</identification>
            <inputNeuron>( 0, 15 )</inputNeuron>
            <outputNeuron>( 1, 9 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.34231879511148944</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 16 )_( 1, 9 )</identification>
            <inputNeuron>( 0, 16 )</inputNeuron>
            <outputNeuron>( 1, 9 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.373516542549976</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 17 )_( 1, 9 )</identification>
            <inputNeuron>( 0, 17 )</inputNeuron>
            <outputNeuron>( 1, 9 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.7690172151554766</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 18 )_( 1, 9 )</identification>
            <inputNeuron>( 0, 18 )</inputNeuron>
            <outputNeuron>( 1, 9 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.2371506154120715</currentWeight>
        </objects>
        <objects xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xmlSynapse">
            <identification>( 0, 19 )_( 1, 9 )</identification>
            <inputNeuron>( 0, 19 )</inputNeuron>
            <outputNeuron>( 1, 9 )</outputNeuron>
            <learningRule>model.function.learning.PerceptronLearningRule</learningRule>
            <learningRate>0.1</learningRate>
            <lastFiredOutput>0.0</lastFiredOutput>
            <currentWeight>0.2707465285766092</currentWeight>
        </objects>
    </synapseWrapper>
</xmlPerceptronWrapper>
